- name: Setup testkay stack
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Import VPC setup variable
      include_vars: vars/vpc_output_vars

    - name: Import testkay setup variable
      include_vars: vars/testkay_stack_setup

    - name: Create testkay ec2 key
      ec2_key:
        name: testkay-stack-key
        region: "{{region}}"
      register: testkaykey_out

    - name: Save private key into file loginkey_testkay.pem
      copy:
        content: "{{testkaykey_out.key.private_key}}"
        dest: "./loginkey_testkay.pem"
        mode: 0600
      when: testkaykey_out.changed
    
    - name: Create security group for load balancer
      ec2_group:
        name: testkayELB-sg
        description: allow port 80 from everywhere and all ports within the security group
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "{{anywhere_ip}}"
      register: testkayELBSG_out

    - name: Create security group for testkay stack
      ec2_group:
        name: testkayStack-sg
        description: allow port 22 from everywhere and all ports within the security group
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{testkayELBSG_out.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{BastionSGid}}"
      register: testkayStackSG_out

    - name: Update security group for testkay stack with it's own security group id
      ec2_group:
        name: testkayStack-sg
        description: allow port 22 from everywhere and all ports within the security group
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{testkayStackSG_out.group_id}}"

    - name: Create Nginx web01
      ec2:
        key_name: testkay-stack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: testkay
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: testkay
          Owner: Devops Team
        group_id: "{{testkayStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: web01_out

    - name: Create Tomcat app01
      ec2:
        key_name: testkay-stack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: testkay
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "app01"
          Project: testkay
          Owner: Devops Team
        group_id: "{{testkayStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: app01_out

    - name: Create Memcache mc01
      ec2:
        key_name: testkay-stack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mc01"
          Project: testkay
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "mc01"
          Project: testkay
          Owner: Devops Team
        group_id: "{{testkayStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: mc01_out

    - name: Create RabbitMQ mq01
      ec2:
        key_name: testkay-stack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rmq_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mq01"
          Project: testkay
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "mq01"
          Project: testkay
          Owner: Devops Team
        group_id: "{{testkayStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: mq01_out

    - name: Create MySql db01
      ec2:
        key_name: testkay-stack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: testkay
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: testkay
          Owner: Devops Team
        group_id: "{{testkayStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: db01_out

    - debug:
        var: db01_out.tagged_instances[0].id

    - local_action:
        module: ec2_elb_lb
        name: "testkay-elb"
        region: "{{region}}"
        state: "{{state}}"
        instance_ids:
          - "{{web01_out.tagged_instances[0].id}}"
        purge_instance_ids: true
        security_group_ids: "{{testkayELBSG_out.group_id}}"
        subnets:
          - "{{pubsub1id}}"
          - "{{pubsub2id}}"
          - "{{pubsub3id}}"
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80

    - name: Insert/Update Hosts IP & Name in file provision-stack/group_vars/hostsip
      blockinfile:
        path: provision-stack/group_vars/hostsip
        block: |
          web01_ip: {{web01_out.tagged_instances[0].private_ip}}
          app01_ip: {{app01_out.tagged_instances[0].private_ip}}
          mq01_ip: {{mq01_out.tagged_instances[0].private_ip}}
          mc01_ip: {{mc01_out.tagged_instances[0].private_ip}}
          db01_ip: {{db01_out.tagged_instances[0].private_ip}}
        
    - name: Copy login key to provision-stack directory
      copy:
        src: loginkey_testkay.pem
        dest: provision-stack/loginkey_testkay.pem
        mode: '0400'

    - name: Insert/Update Inventory file provision-stack/inventory-testkay
      blockinfile:
        path: provision-stack/inventory-testkay
        block: |
          web01 ansible_host={{web01_out.tagged_instances[0].private_ip}}
          app01 ansible_host={{app01_out.tagged_instances[0].private_ip}}
          mq01 ansible_host={{mq01_out.tagged_instances[0].private_ip}}
          mc01 ansible_host={{mc01_out.tagged_instances[0].private_ip}}
          db01 ansible_host={{db01_out.tagged_instances[0].private_ip}}
          cntl ansible_host=127.0.0.1 ansible_connection=local

          [websrvgrp]
          web01

          [appsrvgrp]
          app01

          [mqsrvgrp]
          mq01

          [mcsrvgrp]
          mc01

          [dbsrvgrp]
          db01

          [control]
          cntl

          [stack_inst:children]
          websrvgrp
          appsrvgrp
          mqsrvgrp
          mcsrvgrp
          dbsrvgrp

          [stack_inst:vars]
          ansible_user=ubuntu
          ansible_ssh_private_key_file=loginkey_testkay.pem
          #ansible_python_interpreter=/usr/bin/python3
